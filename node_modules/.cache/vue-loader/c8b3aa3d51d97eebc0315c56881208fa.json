{"remainingRequest":"/Users/eunjae/Desktop/github/weather_vue/weather_vue/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/eunjae/Desktop/github/weather_vue/weather_vue/src/views/City.vue?vue&type=style&index=0&lang=css&","dependencies":[{"path":"/Users/eunjae/Desktop/github/weather_vue/weather_vue/src/views/City.vue","mtime":1588239371613},{"path":"/Users/eunjae/Desktop/github/weather_vue/weather_vue/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/eunjae/Desktop/github/weather_vue/weather_vue/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/eunjae/Desktop/github/weather_vue/weather_vue/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/eunjae/Desktop/github/weather_vue/weather_vue/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/eunjae/Desktop/github/weather_vue/weather_vue/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgouY2l0eXsgb3V0bGluZTozcHggc29saWQgb3JhbmdlOyBtYXJnaW4tdG9wOjMwcHg7IHBhZGRpbmc6NDBweDsgfQpzcGFueyBmb250LXNpemU6MjVweDsgZm9udC13ZWlnaHQ6Ym9sZDsgfQo="},{"version":3,"sources":["City.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkJA;AACA","file":"City.vue","sourceRoot":"src/views","sourcesContent":["<template>\n  <div \n    class=\"city\"\n    \n  ><!-- @cityname = \"newCity\" -->\n    <p>나라이름: <span>{{ city.name }}</span></p>\n\n    <div v-if=\"tempInfo\">\n      <p>평균 기온: <span>{{ temp }} ℃</span></p>\n      <p>최고 기온: <span>{{ maxTemp }} ℃</span></p>\n      <p>최저 기온: <span>{{ minTemp  }} ℃</span></p>     \n      <p>습도: <span>{{ tempInfo.humidity }} %</span></p>     \n    </div>\n\n    <div v-if=\"weather\" >\n      <p>날씨: <span v-for=\"item in weather\">{{ item.main }}.  </span></p>\n      <img v-bind:src=\"`http://openweathermap.org/img/wn/${weather[0].icon}@2x.png`\" />\n    </div>\n\n    <div v-if=\"wind\">\n      <p>바람: <span>{{ windDeg }}풍({{ wind.deg }}) {{ wind.speed }}m/s</span></p>\n    </div>\n\n    <div v-if=\"sun\">\n      <p>일출: <span>{{ sunriseTime }}</span></p>\n      <p>일몰: <span>{{ sunsetTime }}</span></p>\n    </div>\n\n    \n    <div style=\"outline:2px solid gray;  padding:20px;\">\n      <p>날씨 전체 데이터</p>\n      {{ city }}\n    </div>\n  </div>\n</template>\n\n<script>\nimport { eventbus } from '../main'\nexport default {\n  data() {\n    return {\n      cityname: '',\n      // signal: false,\n      minus: 273.15  // json데이터에서 temp는 Kelvin(절대온도)이므로 273.15를 빼주어야한다. // 켈빈은 절대온도(0을 기전으로 함)에 기반으로 하여 측정되는 온도이며, 'K' 심볼이 사용됩니다. 0K 은 -273.15 °C, 혹은 -459.67 °F 로 변환될 수 있습니다.\n    }\n  },\n  computed: {\n    // 각 데이터 선언.\n    city () {\n      return this.$store.state.weatherData\n    },\n    tempInfo() {\n      return this.$store.state.weatherData.main\n    },\n    weather() {\n      return this.$store.state.weatherData.weather\n    },\n    sun() {\n      return this.$store.state.weatherData.sys\n    },\n    wind() {\n      return this.$store.state.weatherData.wind\n    },\n\n    // 기온: 섭씨로 수정 + 소수점 반올림.\n    temp() {\n      return Math.round(this.tempInfo.temp - this.minus)  // 소수점 반올림.\n    },\n    maxTemp() {\n      return Math.round(this.tempInfo.temp_max - this.minus)\n    },\n    minTemp() {\n      return Math.round(this.tempInfo.temp_min - this.minus)\n    },\n    \n    //일출,일몰시간: 유닉스 시간 표준시간으로 변경.\n    sunriseTime() {\n      // unix시간 변환.\n      const sunrise = this.sun.sunrise\n      console.log(sunrise);\n      const sunrisetime = new Date(sunrise * 1000)\n      const sunriseTimestr = sunrisetime.toLocaleTimeString(sunrisetime)\n      return sunriseTimestr;\n    },\n    sunsetTime() {\n      // unix시간 변환.\n      const sunset = this.sun.sunset\n      console.log(sunset);\n      const sunsettime = new Date(sunset * 1000)\n      const sunsetTimestr = sunsettime.toLocaleTimeString(sunsettime)\n      return sunsetTimestr;\n    },\n    windDeg() {\n      let cardinalPoints = null\n      if(0 <= this.wind.deg < 11.25 || 348.75 <= this.wind.deg < 360) { cardinalPoints = '북' }\n      else if(11.25 <= this.wind.deg < 78.75)  { cardinalPoints = '북동' }\n      else if(78.75 <= this.wind.deg < 123.75)  { cardinalPoints = '동' }\n      else if(123.75 <= this.wind.deg < 146.25)  { cardinalPoints = '남동' }\n      else if(146.25 <= this.wind.deg < 191.25)  { cardinalPoints = '남' }\n      else if(191.25 <= this.wind.deg < 236.25)  { cardinalPoints = '남서' }\n      else if(236.25 <= this.wind.deg < 281.25)  { cardinalPoints = '서' }\n      else if(281.25 <= this.wind.deg < 348.75)  { cardinalPoints = '북서' }\n\n      return cardinalPoints\n    }\n  },\n  created() {  \n    // 페이지에 새롭게 접속할 경우, 이전에 입력해놓았던 나라가 보이도록 로컬스토리지에서 나라이름 가져옴.\n    const localstorageCityName = localStorage.getItem('city_name');  \n    this.newCity(localstorageCityName)\n\n\n    // SearchCity.vue에서 input에 입력한 나라이름 가져와서 새롭게 나라날씨 데이터 가져옴.\n    // eventbus.$on('sendCityName', (cityInput, signal) => {\n    eventbus.$on('sendCityName', (cityInput) => {\n      console.log(cityInput)\n      // console.log(signal);     \n\n      // 나라 이름이 맞을 경우 날씨데이터 보여주고, 이름 틀릴경우 알림창 뜨도록하기.(아직 미완성) \n      // if(signal === true) {\n        this.newCity(cityInput)\n      // }    \n      \n    }) \n    \n\n    \n        \n  },\n  methods: {\n    // api주소에 입력한 도시이름 넣어줌.(api의 index.js)\n    newCity(cityname) {\n      console.log('city name 받았어!!!!!!!!!');\n      this.$store.dispatch('FETCH_WEATHER', cityname)     \n    },\n  }\n}\n\n\n    //1. input이 입력되면 eventBus로 보낸 city명을 받아온뒤\n    //2. city명을 데이터에 저장해주고,\n    //3. 이 과정을 거친 후에 store로 시티명을 보내줘야함.\n    // 온도, 날씨정보, 도시명, 날짜 출력.\n</script>\n\n<style>\n.city{ outline:3px solid orange; margin-top:30px; padding:40px; }\nspan{ font-size:25px; font-weight:bold; }\n</style>\n"]}]}