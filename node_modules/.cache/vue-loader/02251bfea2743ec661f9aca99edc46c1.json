{"remainingRequest":"/Users/eunjae/Desktop/github/weatherApp_ej/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/eunjae/Desktop/github/weatherApp_ej/src/views/City.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/eunjae/Desktop/github/weatherApp_ej/src/views/City.vue","mtime":1588259823975},{"path":"/Users/eunjae/Desktop/github/weatherApp_ej/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/eunjae/Desktop/github/weatherApp_ej/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/eunjae/Desktop/github/weatherApp_ej/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/eunjae/Desktop/github/weatherApp_ej/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCB7IGV2ZW50YnVzIH0gZnJvbSAnLi4vbWFpbicKZXhwb3J0IGRlZmF1bHQgewogIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICBjaXR5bmFtZTogJycsCiAgICAgIC8vIHNpZ25hbDogZmFsc2UsCiAgICAgIG1pbnVzOiAyNzMuMTUgIC8vIGpzb27rjbDsnbTthLDsl5DshJwgdGVtcOuKlCBLZWx2aW4o7KCI64yA7Jio64+EKeydtOuvgOuhnCAyNzMuMTXrpbwg67m87KO87Ja07JW87ZWc64ukLiAvLyDsvIjruYjsnYAg7KCI64yA7Jio64+EKDDsnYQg6riw7KCE7Jy866GcIO2VqCnsl5Ag6riw67CY7Jy866GcIO2VmOyXrCDsuKHsoJXrkJjripQg7Jio64+E7J2066mwLCAnSycg7Ius67O87J20IOyCrOyaqeuQqeuLiOuLpC4gMEsg7J2AIC0yNzMuMTUgwrBDLCDtmLnsnYAgLTQ1OS42NyDCsEYg66GcIOuzgO2ZmOuQoCDsiJgg7J6I7Iq164uI64ukLgogICAgfQogIH0sCiAgY29tcHV0ZWQ6IHsKICAgIC8vIOqwgSDrjbDsnbTthLAg7ISg7Ja4LgogICAgY2l0eSAoKSB7CiAgICAgIHJldHVybiB0aGlzLiRzdG9yZS5zdGF0ZS53ZWF0aGVyRGF0YQogICAgfSwKICAgIHRlbXBJbmZvKCkgewogICAgICByZXR1cm4gdGhpcy4kc3RvcmUuc3RhdGUud2VhdGhlckRhdGEubWFpbgogICAgfSwKICAgIHdlYXRoZXIoKSB7CiAgICAgIHJldHVybiB0aGlzLiRzdG9yZS5zdGF0ZS53ZWF0aGVyRGF0YS53ZWF0aGVyCiAgICB9LAogICAgc3VuKCkgewogICAgICByZXR1cm4gdGhpcy4kc3RvcmUuc3RhdGUud2VhdGhlckRhdGEuc3lzCiAgICB9LAogICAgd2luZCgpIHsKICAgICAgcmV0dXJuIHRoaXMuJHN0b3JlLnN0YXRlLndlYXRoZXJEYXRhLndpbmQKICAgIH0sCgogICAgLy8g6riw7JioOiDshK3slKjroZwg7IiY7KCVICsg7IaM7IiY7KCQIOuwmOyYrOumvC4KICAgIHRlbXAoKSB7CiAgICAgIHJldHVybiBNYXRoLnJvdW5kKHRoaXMudGVtcEluZm8udGVtcCAtIHRoaXMubWludXMpICAvLyDshozsiJjsoJAg67CY7Jis66a8LgogICAgfSwKICAgIG1heFRlbXAoKSB7CiAgICAgIHJldHVybiBNYXRoLnJvdW5kKHRoaXMudGVtcEluZm8udGVtcF9tYXggLSB0aGlzLm1pbnVzKQogICAgfSwKICAgIG1pblRlbXAoKSB7CiAgICAgIHJldHVybiBNYXRoLnJvdW5kKHRoaXMudGVtcEluZm8udGVtcF9taW4gLSB0aGlzLm1pbnVzKQogICAgfSwKCiAgICAvL+ydvOy2nCzsnbzrqrDsi5zqsIQ6IOycoOuLieyKpCDsi5zqsITsnYQg7ZGc7KSA7Iuc6rCE7Jy866GcIOuzgOqyvS4KICAgIHN1bnJpc2VUaW1lKCkgewogICAgICAvLyB1bml47Iuc6rCEIOuzgO2ZmC4KICAgICAgY29uc3Qgc3VucmlzZSA9IHRoaXMuc3VuLnN1bnJpc2UKICAgICAgY29uc29sZS5sb2coc3VucmlzZSk7CiAgICAgIGNvbnN0IHN1bnJpc2V0aW1lID0gbmV3IERhdGUoc3VucmlzZSAqIDEwMDApCiAgICAgIGNvbnN0IHN1bnJpc2VUaW1lc3RyID0gc3VucmlzZXRpbWUudG9Mb2NhbGVUaW1lU3RyaW5nKHN1bnJpc2V0aW1lKQogICAgICByZXR1cm4gc3VucmlzZVRpbWVzdHI7CiAgICB9LAogICAgc3Vuc2V0VGltZSgpIHsKICAgICAgLy8gdW5peOyLnOqwhCDrs4DtmZguCiAgICAgIGNvbnN0IHN1bnNldCA9IHRoaXMuc3VuLnN1bnNldAogICAgICBjb25zb2xlLmxvZyhzdW5zZXQpOwogICAgICBjb25zdCBzdW5zZXR0aW1lID0gbmV3IERhdGUoc3Vuc2V0ICogMTAwMCkKICAgICAgY29uc3Qgc3Vuc2V0VGltZXN0ciA9IHN1bnNldHRpbWUudG9Mb2NhbGVUaW1lU3RyaW5nKHN1bnNldHRpbWUpCiAgICAgIHJldHVybiBzdW5zZXRUaW1lc3RyOwogICAgfSwKCiAgICAvLyDtko3tlqU6IOuwqeychCDqsIHrj4Trpbwg7ZWc6riA66GcIOyImOyglS4KICAgIHdpbmREZWcoKSB7CiAgICAgIGxldCBjYXJkaW5hbFBvaW50cyA9IG51bGwKICAgICAgaWYoMCA8PSB0aGlzLndpbmQuZGVnIDwgMTEuMjUgfHwgMzQ4Ljc1IDw9IHRoaXMud2luZC5kZWcgPCAzNjApIHsgY2FyZGluYWxQb2ludHMgPSAn67aBJyB9CiAgICAgIGVsc2UgaWYoMTEuMjUgPD0gdGhpcy53aW5kLmRlZyA8IDc4Ljc1KSAgeyBjYXJkaW5hbFBvaW50cyA9ICfrtoHrj5knIH0KICAgICAgZWxzZSBpZig3OC43NSA8PSB0aGlzLndpbmQuZGVnIDwgMTIzLjc1KSAgeyBjYXJkaW5hbFBvaW50cyA9ICfrj5knIH0KICAgICAgZWxzZSBpZigxMjMuNzUgPD0gdGhpcy53aW5kLmRlZyA8IDE0Ni4yNSkgIHsgY2FyZGluYWxQb2ludHMgPSAn64Ko64+ZJyB9CiAgICAgIGVsc2UgaWYoMTQ2LjI1IDw9IHRoaXMud2luZC5kZWcgPCAxOTEuMjUpICB7IGNhcmRpbmFsUG9pbnRzID0gJ+uCqCcgfQogICAgICBlbHNlIGlmKDE5MS4yNSA8PSB0aGlzLndpbmQuZGVnIDwgMjM2LjI1KSAgeyBjYXJkaW5hbFBvaW50cyA9ICfrgqjshJwnIH0KICAgICAgZWxzZSBpZigyMzYuMjUgPD0gdGhpcy53aW5kLmRlZyA8IDI4MS4yNSkgIHsgY2FyZGluYWxQb2ludHMgPSAn7IScJyB9CiAgICAgIGVsc2UgaWYoMjgxLjI1IDw9IHRoaXMud2luZC5kZWcgPCAzNDguNzUpICB7IGNhcmRpbmFsUG9pbnRzID0gJ+u2geyEnCcgfQoKICAgICAgcmV0dXJuIGNhcmRpbmFsUG9pbnRzCiAgICB9CiAgfSwKICBjcmVhdGVkKCkgeyAgCiAgICAvLyDtjpjsnbTsp4Dsl5Ag7IOI66Gt6rKMIOygkeyGje2VoCDqsr3smrAsIOydtOyghOyXkCDsnoXroKXtlbTrhpPslZjrjZgg64KY65286rCAIOuztOydtOuPhOuhnSDroZzsu6zsiqTthqDrpqzsp4Dsl5DshJwg64KY65287J2066aEIOqwgOyguOyYtC4KICAgIGNvbnN0IGxvY2Fsc3RvcmFnZUNpdHlOYW1lID0gbG9jYWxTdG9yYWdlLmdldEl0ZW0oJ2NpdHlfbmFtZScpOyAgCiAgICB0aGlzLm5ld0NpdHkobG9jYWxzdG9yYWdlQ2l0eU5hbWUpCgoKICAgIC8vIFNlYXJjaENpdHkudnVl7JeQ7IScIGlucHV07JeQIOyeheugpe2VnCDrgpjrnbzsnbTrpoQg6rCA7KC47JmA7IScIOyDiOuhreqyjCDrgpjrnbzrgqDslKgg642w7J207YSwIOqwgOyguOyYtC4KICAgIC8vIGV2ZW50YnVzLiRvbignc2VuZENpdHlOYW1lJywgKGNpdHlJbnB1dCwgc2lnbmFsKSA9PiB7CiAgICBldmVudGJ1cy4kb24oJ3NlbmRDaXR5TmFtZScsIChjaXR5SW5wdXQpID0+IHsKICAgICAgY29uc29sZS5sb2coY2l0eUlucHV0KQogICAgICAvLyBjb25zb2xlLmxvZyhzaWduYWwpOyAgICAgCgogICAgICAvLyDrgpjrnbwg7J2066aE7J20IOunnuydhCDqsr3smrAg64Kg7JSo642w7J207YSwIOuztOyXrOyjvOqzoCwg7J2066aEIO2LgOumtOqyveyasCDslYzrprzssL0g65yo64+E66Gd7ZWY6riwLijslYTsp4Eg66+47JmE7ISxKSAKICAgICAgLy8gaWYoc2lnbmFsID09PSB0cnVlKSB7CiAgICAgICAgdGhpcy5uZXdDaXR5KGNpdHlJbnB1dCkKICAgICAgLy8gfSAgICAKICAgICAgCiAgICB9KSAKICAgIAoKICAgIAogICAgICAgIAogIH0sCiAgbWV0aG9kczogewogICAgLy8gYXBp7KO87IaM7JeQIOyeheugpe2VnCDrj4Tsi5zsnbTrpoQg64Sj7Ja07KSMLihhcGnsnZggaW5kZXguanMpCiAgICBuZXdDaXR5KGNpdHluYW1lKSB7CiAgICAgIGNvbnNvbGUubG9nKCdjaXR5IG5hbWUg67Cb7JWY7Ja0ISEhISEhISEhJyk7CiAgICAgIHRoaXMuJHN0b3JlLmRpc3BhdGNoKCdGRVRDSF9XRUFUSEVSJywgY2l0eW5hbWUpICAgICAKICAgIH0sCiAgfQp9CgoKICAgIC8vMS4gaW5wdXTsnbQg7J6F66Cl65CY66m0IGV2ZW50QnVz66GcIOuztOuCuCBjaXR566qF7J2EIOuwm+yVhOyYqOuSpAogICAgLy8yLiBjaXR566qF7J2EIOuNsOydtO2EsOyXkCDsoIDsnqXtlbTso7zqs6AsCiAgICAvLzMuIOydtCDqs7zsoJXsnYQg6rGw7LmcIO2bhOyXkCBzdG9yZeuhnCDsi5zti7DrqoXsnYQg67O064K07KSY7JW87ZWoLgogICAgLy8g7Jio64+ELCDrgqDslKjsoJXrs7QsIOuPhOyLnOuqhSwg64Kg7KecIOy2nOugpS4K"},{"version":3,"sources":["City.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA8CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;;;;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA","file":"City.vue","sourceRoot":"src/views","sourcesContent":["<template>\n  <div \n    class=\"city clear\"\n    \n  ><!-- @cityname = \"newCity\" -->\n    <div class=\"mainWeather\">\n      <h1 class=\"cityname\">{{ city.name }}</h1>\n      <span class=\"date\">Sunday 30 April</span>\n\n      <div v-if=\"weather\" class=\"clear\">\n        <div class=\"iconBox\">\n          <img v-bind:src=\"`http://openweathermap.org/img/wn/${weather[0].icon}@2x.png`\" />\n        </div>\n        <div class=\"textBox\">\n          <span class=\"temp\">{{ temp }}℃</span> <!--평균기온-->\n          <span v-for=\"item in weather\" class=\"weatherText\">{{ item.main }}.  </span> <!--날씨-->\n        </div>\n      </div>\n    </div><!--.mainWeather-->\n\n    <div class=\"weatherInfo\">\n      <div v-if=\"tempInfo\">\n        <span>{{ maxTemp }}℃<span>Heigh</span></span> <!--최고 기온-->\n        <span>{{ minTemp  }}℃<span>Low</span></span>  <!--최저 기온-->    \n        <span>{{ tempInfo.humidity }}%<span>Humidity</span></span> <!--습도-->     \n      </div>\n\n      <div v-if=\"wind\">\n        <span>{{ windDeg }}풍({{ wind.deg }}) {{ wind.speed }}m/s<span>Wind</span></span> <!--바람-->\n      </div>\n\n      <div v-if=\"sun\">\n        <span>{{ sunriseTime }}<span>Sunrise</span></span> <!--일출-->\n        <span>{{ sunsetTime }}<span>Sunset</span></span> <!--일몰-->\n      </div>\n    </div><!--.weatherInfo-->\n\n    \n    <!-- <div style=\"outline:2px solid gray;  padding:20px;\">\n      <p>날씨 전체 데이터</p>\n      {{ city }}\n    </div> -->\n  </div><!--.city-->\n</template>\n\n<script>\nimport { eventbus } from '../main'\nexport default {\n  data() {\n    return {\n      cityname: '',\n      // signal: false,\n      minus: 273.15  // json데이터에서 temp는 Kelvin(절대온도)이므로 273.15를 빼주어야한다. // 켈빈은 절대온도(0을 기전으로 함)에 기반으로 하여 측정되는 온도이며, 'K' 심볼이 사용됩니다. 0K 은 -273.15 °C, 혹은 -459.67 °F 로 변환될 수 있습니다.\n    }\n  },\n  computed: {\n    // 각 데이터 선언.\n    city () {\n      return this.$store.state.weatherData\n    },\n    tempInfo() {\n      return this.$store.state.weatherData.main\n    },\n    weather() {\n      return this.$store.state.weatherData.weather\n    },\n    sun() {\n      return this.$store.state.weatherData.sys\n    },\n    wind() {\n      return this.$store.state.weatherData.wind\n    },\n\n    // 기온: 섭씨로 수정 + 소수점 반올림.\n    temp() {\n      return Math.round(this.tempInfo.temp - this.minus)  // 소수점 반올림.\n    },\n    maxTemp() {\n      return Math.round(this.tempInfo.temp_max - this.minus)\n    },\n    minTemp() {\n      return Math.round(this.tempInfo.temp_min - this.minus)\n    },\n\n    //일출,일몰시간: 유닉스 시간을 표준시간으로 변경.\n    sunriseTime() {\n      // unix시간 변환.\n      const sunrise = this.sun.sunrise\n      console.log(sunrise);\n      const sunrisetime = new Date(sunrise * 1000)\n      const sunriseTimestr = sunrisetime.toLocaleTimeString(sunrisetime)\n      return sunriseTimestr;\n    },\n    sunsetTime() {\n      // unix시간 변환.\n      const sunset = this.sun.sunset\n      console.log(sunset);\n      const sunsettime = new Date(sunset * 1000)\n      const sunsetTimestr = sunsettime.toLocaleTimeString(sunsettime)\n      return sunsetTimestr;\n    },\n\n    // 풍향: 방위 각도를 한글로 수정.\n    windDeg() {\n      let cardinalPoints = null\n      if(0 <= this.wind.deg < 11.25 || 348.75 <= this.wind.deg < 360) { cardinalPoints = '북' }\n      else if(11.25 <= this.wind.deg < 78.75)  { cardinalPoints = '북동' }\n      else if(78.75 <= this.wind.deg < 123.75)  { cardinalPoints = '동' }\n      else if(123.75 <= this.wind.deg < 146.25)  { cardinalPoints = '남동' }\n      else if(146.25 <= this.wind.deg < 191.25)  { cardinalPoints = '남' }\n      else if(191.25 <= this.wind.deg < 236.25)  { cardinalPoints = '남서' }\n      else if(236.25 <= this.wind.deg < 281.25)  { cardinalPoints = '서' }\n      else if(281.25 <= this.wind.deg < 348.75)  { cardinalPoints = '북서' }\n\n      return cardinalPoints\n    }\n  },\n  created() {  \n    // 페이지에 새롭게 접속할 경우, 이전에 입력해놓았던 나라가 보이도록 로컬스토리지에서 나라이름 가져옴.\n    const localstorageCityName = localStorage.getItem('city_name');  \n    this.newCity(localstorageCityName)\n\n\n    // SearchCity.vue에서 input에 입력한 나라이름 가져와서 새롭게 나라날씨 데이터 가져옴.\n    // eventbus.$on('sendCityName', (cityInput, signal) => {\n    eventbus.$on('sendCityName', (cityInput) => {\n      console.log(cityInput)\n      // console.log(signal);     \n\n      // 나라 이름이 맞을 경우 날씨데이터 보여주고, 이름 틀릴경우 알림창 뜨도록하기.(아직 미완성) \n      // if(signal === true) {\n        this.newCity(cityInput)\n      // }    \n      \n    }) \n    \n\n    \n        \n  },\n  methods: {\n    // api주소에 입력한 도시이름 넣어줌.(api의 index.js)\n    newCity(cityname) {\n      console.log('city name 받았어!!!!!!!!!');\n      this.$store.dispatch('FETCH_WEATHER', cityname)     \n    },\n  }\n}\n\n\n    //1. input이 입력되면 eventBus로 보낸 city명을 받아온뒤\n    //2. city명을 데이터에 저장해주고,\n    //3. 이 과정을 거친 후에 store로 시티명을 보내줘야함.\n    // 온도, 날씨정보, 도시명, 날짜 출력.\n</script>\n\n<style>\n.clear:after{ content:''; display:block; clear:both; }\n.city{ outline:0px solid orange; margin-top:30px; padding:40px 100px; }\n\n.mainWeather{ outline:0px solid red; width:50%; float:left; }\n.mainWeather > .cityname{ outline:0px solid red; font-size:45px; font-weight:bold; }\n.mainWeather > .date{ margin:10px 0 50px; font-size:20px; display:block; }\n.mainWeather > div{  height:200px; }\n.mainWeather > div > .iconBox{ outline:0px solid lime; width:50%; padding-top:10px; float:left; }\n.mainWeather > div > .iconBox > img{ outline:0px solid lime; width:180px; margin:0 0 0 auto; display:block; }\n.mainWeather > div > .textBox{ outline:0px solid blue; width:50%; height:100%; padding:40px 0; float:left; }\n.mainWeather > div > .textBox > .temp{ outline:0px solid blue; font-size:70px;  }\n.mainWeather > div > .textBox > .weatherText{ outline:0px solid blueviolet; margin-left:10px; font-size:20px; display:block;  }\n\n.weatherInfo{ border-radius:10px;  width:calc(50% + -20px);  margin:100px 0 0 20px; background-color:rgba(255, 255, 255, .3); float:left; }\n.weatherInfo span{ width:33.3%; height:100px; padding:26px 0; font-size:20px; text-align:center; float:left; position:relative; } /* 날씨정보 */\n.weatherInfo span > span{  width:100%; height:auto; padding:0; font-size:15px; position:absolute; bottom:26px; left:0; }  /* 날씨정보 타이틀 */\n\n@media screen and (max-width: 900px) {\n  .city{ padding:40px; }\n  .mainWeather{ width:100%; }\n  .weatherInfo{ width:100%; margin:50px 0; }\n}\n\n@media screen and (max-width: 550px) {\n  .mainWeather > div > .iconBox > img{ width:130px; }\n  .mainWeather > div > .textBox > .temp{ font-size:50px; }\n  .weatherInfo{ width:100%; margin:30px 0; }\n}\n</style>\n"]}]}