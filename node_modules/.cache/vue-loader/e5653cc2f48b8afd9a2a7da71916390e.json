{"remainingRequest":"/Users/eunjae/Desktop/github/weather_vue/weather_vue/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/eunjae/Desktop/github/weather_vue/weather_vue/src/views/City.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/eunjae/Desktop/github/weather_vue/weather_vue/src/views/City.vue","mtime":1588239371613},{"path":"/Users/eunjae/Desktop/github/weather_vue/weather_vue/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/eunjae/Desktop/github/weather_vue/weather_vue/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/eunjae/Desktop/github/weather_vue/weather_vue/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/eunjae/Desktop/github/weather_vue/weather_vue/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCB7IGV2ZW50YnVzIH0gZnJvbSAnLi4vbWFpbicKZXhwb3J0IGRlZmF1bHQgewogIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICBjaXR5bmFtZTogJycsCiAgICAgIC8vIHNpZ25hbDogZmFsc2UsCiAgICAgIG1pbnVzOiAyNzMuMTUgIC8vIGpzb27rjbDsnbTthLDsl5DshJwgdGVtcOuKlCBLZWx2aW4o7KCI64yA7Jio64+EKeydtOuvgOuhnCAyNzMuMTXrpbwg67m87KO87Ja07JW87ZWc64ukLiAvLyDsvIjruYjsnYAg7KCI64yA7Jio64+EKDDsnYQg6riw7KCE7Jy866GcIO2VqCnsl5Ag6riw67CY7Jy866GcIO2VmOyXrCDsuKHsoJXrkJjripQg7Jio64+E7J2066mwLCAnSycg7Ius67O87J20IOyCrOyaqeuQqeuLiOuLpC4gMEsg7J2AIC0yNzMuMTUgwrBDLCDtmLnsnYAgLTQ1OS42NyDCsEYg66GcIOuzgO2ZmOuQoCDsiJgg7J6I7Iq164uI64ukLgogICAgfQogIH0sCiAgY29tcHV0ZWQ6IHsKICAgIC8vIOqwgSDrjbDsnbTthLAg7ISg7Ja4LgogICAgY2l0eSAoKSB7CiAgICAgIHJldHVybiB0aGlzLiRzdG9yZS5zdGF0ZS53ZWF0aGVyRGF0YQogICAgfSwKICAgIHRlbXBJbmZvKCkgewogICAgICByZXR1cm4gdGhpcy4kc3RvcmUuc3RhdGUud2VhdGhlckRhdGEubWFpbgogICAgfSwKICAgIHdlYXRoZXIoKSB7CiAgICAgIHJldHVybiB0aGlzLiRzdG9yZS5zdGF0ZS53ZWF0aGVyRGF0YS53ZWF0aGVyCiAgICB9LAogICAgc3VuKCkgewogICAgICByZXR1cm4gdGhpcy4kc3RvcmUuc3RhdGUud2VhdGhlckRhdGEuc3lzCiAgICB9LAogICAgd2luZCgpIHsKICAgICAgcmV0dXJuIHRoaXMuJHN0b3JlLnN0YXRlLndlYXRoZXJEYXRhLndpbmQKICAgIH0sCgogICAgLy8g6riw7JioOiDshK3slKjroZwg7IiY7KCVICsg7IaM7IiY7KCQIOuwmOyYrOumvC4KICAgIHRlbXAoKSB7CiAgICAgIHJldHVybiBNYXRoLnJvdW5kKHRoaXMudGVtcEluZm8udGVtcCAtIHRoaXMubWludXMpICAvLyDshozsiJjsoJAg67CY7Jis66a8LgogICAgfSwKICAgIG1heFRlbXAoKSB7CiAgICAgIHJldHVybiBNYXRoLnJvdW5kKHRoaXMudGVtcEluZm8udGVtcF9tYXggLSB0aGlzLm1pbnVzKQogICAgfSwKICAgIG1pblRlbXAoKSB7CiAgICAgIHJldHVybiBNYXRoLnJvdW5kKHRoaXMudGVtcEluZm8udGVtcF9taW4gLSB0aGlzLm1pbnVzKQogICAgfSwKICAgIAogICAgLy/snbzstpws7J2866qw7Iuc6rCEOiDsnKDri4nsiqQg7Iuc6rCEIO2RnOykgOyLnOqwhOycvOuhnCDrs4Dqsr0uCiAgICBzdW5yaXNlVGltZSgpIHsKICAgICAgLy8gdW5peOyLnOqwhCDrs4DtmZguCiAgICAgIGNvbnN0IHN1bnJpc2UgPSB0aGlzLnN1bi5zdW5yaXNlCiAgICAgIGNvbnNvbGUubG9nKHN1bnJpc2UpOwogICAgICBjb25zdCBzdW5yaXNldGltZSA9IG5ldyBEYXRlKHN1bnJpc2UgKiAxMDAwKQogICAgICBjb25zdCBzdW5yaXNlVGltZXN0ciA9IHN1bnJpc2V0aW1lLnRvTG9jYWxlVGltZVN0cmluZyhzdW5yaXNldGltZSkKICAgICAgcmV0dXJuIHN1bnJpc2VUaW1lc3RyOwogICAgfSwKICAgIHN1bnNldFRpbWUoKSB7CiAgICAgIC8vIHVuaXjsi5zqsIQg67OA7ZmYLgogICAgICBjb25zdCBzdW5zZXQgPSB0aGlzLnN1bi5zdW5zZXQKICAgICAgY29uc29sZS5sb2coc3Vuc2V0KTsKICAgICAgY29uc3Qgc3Vuc2V0dGltZSA9IG5ldyBEYXRlKHN1bnNldCAqIDEwMDApCiAgICAgIGNvbnN0IHN1bnNldFRpbWVzdHIgPSBzdW5zZXR0aW1lLnRvTG9jYWxlVGltZVN0cmluZyhzdW5zZXR0aW1lKQogICAgICByZXR1cm4gc3Vuc2V0VGltZXN0cjsKICAgIH0sCiAgICB3aW5kRGVnKCkgewogICAgICBsZXQgY2FyZGluYWxQb2ludHMgPSBudWxsCiAgICAgIGlmKDAgPD0gdGhpcy53aW5kLmRlZyA8IDExLjI1IHx8IDM0OC43NSA8PSB0aGlzLndpbmQuZGVnIDwgMzYwKSB7IGNhcmRpbmFsUG9pbnRzID0gJ+u2gScgfQogICAgICBlbHNlIGlmKDExLjI1IDw9IHRoaXMud2luZC5kZWcgPCA3OC43NSkgIHsgY2FyZGluYWxQb2ludHMgPSAn67aB64+ZJyB9CiAgICAgIGVsc2UgaWYoNzguNzUgPD0gdGhpcy53aW5kLmRlZyA8IDEyMy43NSkgIHsgY2FyZGluYWxQb2ludHMgPSAn64+ZJyB9CiAgICAgIGVsc2UgaWYoMTIzLjc1IDw9IHRoaXMud2luZC5kZWcgPCAxNDYuMjUpICB7IGNhcmRpbmFsUG9pbnRzID0gJ+uCqOuPmScgfQogICAgICBlbHNlIGlmKDE0Ni4yNSA8PSB0aGlzLndpbmQuZGVnIDwgMTkxLjI1KSAgeyBjYXJkaW5hbFBvaW50cyA9ICfrgqgnIH0KICAgICAgZWxzZSBpZigxOTEuMjUgPD0gdGhpcy53aW5kLmRlZyA8IDIzNi4yNSkgIHsgY2FyZGluYWxQb2ludHMgPSAn64Ko7IScJyB9CiAgICAgIGVsc2UgaWYoMjM2LjI1IDw9IHRoaXMud2luZC5kZWcgPCAyODEuMjUpICB7IGNhcmRpbmFsUG9pbnRzID0gJ+yEnCcgfQogICAgICBlbHNlIGlmKDI4MS4yNSA8PSB0aGlzLndpbmQuZGVnIDwgMzQ4Ljc1KSAgeyBjYXJkaW5hbFBvaW50cyA9ICfrtoHshJwnIH0KCiAgICAgIHJldHVybiBjYXJkaW5hbFBvaW50cwogICAgfQogIH0sCiAgY3JlYXRlZCgpIHsgIAogICAgLy8g7Y6Y7J207KeA7JeQIOyDiOuhreqyjCDsoJHsho3tlaAg6rK97JqwLCDsnbTsoITsl5Ag7J6F66Cl7ZW064aT7JWY642YIOuCmOudvOqwgCDrs7TsnbTrj4TroZ0g66Gc7Lus7Iqk7Yag66as7KeA7JeQ7IScIOuCmOudvOydtOumhCDqsIDsoLjsmLQuCiAgICBjb25zdCBsb2NhbHN0b3JhZ2VDaXR5TmFtZSA9IGxvY2FsU3RvcmFnZS5nZXRJdGVtKCdjaXR5X25hbWUnKTsgIAogICAgdGhpcy5uZXdDaXR5KGxvY2Fsc3RvcmFnZUNpdHlOYW1lKQoKCiAgICAvLyBTZWFyY2hDaXR5LnZ1ZeyXkOyEnCBpbnB1dOyXkCDsnoXroKXtlZwg64KY65287J2066aEIOqwgOyguOyZgOyEnCDsg4jroa3qsowg64KY652864Kg7JSoIOuNsOydtO2EsCDqsIDsoLjsmLQuCiAgICAvLyBldmVudGJ1cy4kb24oJ3NlbmRDaXR5TmFtZScsIChjaXR5SW5wdXQsIHNpZ25hbCkgPT4gewogICAgZXZlbnRidXMuJG9uKCdzZW5kQ2l0eU5hbWUnLCAoY2l0eUlucHV0KSA9PiB7CiAgICAgIGNvbnNvbGUubG9nKGNpdHlJbnB1dCkKICAgICAgLy8gY29uc29sZS5sb2coc2lnbmFsKTsgICAgIAoKICAgICAgLy8g64KY6528IOydtOumhOydtCDrp57snYQg6rK97JqwIOuCoOyUqOuNsOydtO2EsCDrs7Tsl6zso7zqs6AsIOydtOumhCDti4DrprTqsr3smrAg7JWM66a87LC9IOucqOuPhOuhne2VmOq4sC4o7JWE7KeBIOuvuOyZhOyEsSkgCiAgICAgIC8vIGlmKHNpZ25hbCA9PT0gdHJ1ZSkgewogICAgICAgIHRoaXMubmV3Q2l0eShjaXR5SW5wdXQpCiAgICAgIC8vIH0gICAgCiAgICAgIAogICAgfSkgCiAgICAKCiAgICAKICAgICAgICAKICB9LAogIG1ldGhvZHM6IHsKICAgIC8vIGFwaeyjvOyGjOyXkCDsnoXroKXtlZwg64+E7Iuc7J2066aEIOuEo+yWtOykjC4oYXBp7J2YIGluZGV4LmpzKQogICAgbmV3Q2l0eShjaXR5bmFtZSkgewogICAgICBjb25zb2xlLmxvZygnY2l0eSBuYW1lIOuwm+yVmOyWtCEhISEhISEhIScpOwogICAgICB0aGlzLiRzdG9yZS5kaXNwYXRjaCgnRkVUQ0hfV0VBVEhFUicsIGNpdHluYW1lKSAgICAgCiAgICB9LAogIH0KfQoKCiAgICAvLzEuIGlucHV07J20IOyeheugpeuQmOuptCBldmVudEJ1c+uhnCDrs7TrgrggY2l0eeuqheydhCDrsJvslYTsmKjrkqQKICAgIC8vMi4gY2l0eeuqheydhCDrjbDsnbTthLDsl5Ag7KCA7J6l7ZW07KO86rOgLAogICAgLy8zLiDsnbQg6rO87KCV7J2EIOqxsOy5nCDtm4Tsl5Agc3RvcmXroZwg7Iuc7Yuw66qF7J2EIOuztOuCtOykmOyVvO2VqC4KICAgIC8vIOyYqOuPhCwg64Kg7JSo7KCV67O0LCDrj4Tsi5zrqoUsIOuCoOynnCDstpzroKUuCg=="},{"version":3,"sources":["City.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAqCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;;;;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA","file":"City.vue","sourceRoot":"src/views","sourcesContent":["<template>\n  <div \n    class=\"city\"\n    \n  ><!-- @cityname = \"newCity\" -->\n    <p>나라이름: <span>{{ city.name }}</span></p>\n\n    <div v-if=\"tempInfo\">\n      <p>평균 기온: <span>{{ temp }} ℃</span></p>\n      <p>최고 기온: <span>{{ maxTemp }} ℃</span></p>\n      <p>최저 기온: <span>{{ minTemp  }} ℃</span></p>     \n      <p>습도: <span>{{ tempInfo.humidity }} %</span></p>     \n    </div>\n\n    <div v-if=\"weather\" >\n      <p>날씨: <span v-for=\"item in weather\">{{ item.main }}.  </span></p>\n      <img v-bind:src=\"`http://openweathermap.org/img/wn/${weather[0].icon}@2x.png`\" />\n    </div>\n\n    <div v-if=\"wind\">\n      <p>바람: <span>{{ windDeg }}풍({{ wind.deg }}) {{ wind.speed }}m/s</span></p>\n    </div>\n\n    <div v-if=\"sun\">\n      <p>일출: <span>{{ sunriseTime }}</span></p>\n      <p>일몰: <span>{{ sunsetTime }}</span></p>\n    </div>\n\n    \n    <div style=\"outline:2px solid gray;  padding:20px;\">\n      <p>날씨 전체 데이터</p>\n      {{ city }}\n    </div>\n  </div>\n</template>\n\n<script>\nimport { eventbus } from '../main'\nexport default {\n  data() {\n    return {\n      cityname: '',\n      // signal: false,\n      minus: 273.15  // json데이터에서 temp는 Kelvin(절대온도)이므로 273.15를 빼주어야한다. // 켈빈은 절대온도(0을 기전으로 함)에 기반으로 하여 측정되는 온도이며, 'K' 심볼이 사용됩니다. 0K 은 -273.15 °C, 혹은 -459.67 °F 로 변환될 수 있습니다.\n    }\n  },\n  computed: {\n    // 각 데이터 선언.\n    city () {\n      return this.$store.state.weatherData\n    },\n    tempInfo() {\n      return this.$store.state.weatherData.main\n    },\n    weather() {\n      return this.$store.state.weatherData.weather\n    },\n    sun() {\n      return this.$store.state.weatherData.sys\n    },\n    wind() {\n      return this.$store.state.weatherData.wind\n    },\n\n    // 기온: 섭씨로 수정 + 소수점 반올림.\n    temp() {\n      return Math.round(this.tempInfo.temp - this.minus)  // 소수점 반올림.\n    },\n    maxTemp() {\n      return Math.round(this.tempInfo.temp_max - this.minus)\n    },\n    minTemp() {\n      return Math.round(this.tempInfo.temp_min - this.minus)\n    },\n    \n    //일출,일몰시간: 유닉스 시간 표준시간으로 변경.\n    sunriseTime() {\n      // unix시간 변환.\n      const sunrise = this.sun.sunrise\n      console.log(sunrise);\n      const sunrisetime = new Date(sunrise * 1000)\n      const sunriseTimestr = sunrisetime.toLocaleTimeString(sunrisetime)\n      return sunriseTimestr;\n    },\n    sunsetTime() {\n      // unix시간 변환.\n      const sunset = this.sun.sunset\n      console.log(sunset);\n      const sunsettime = new Date(sunset * 1000)\n      const sunsetTimestr = sunsettime.toLocaleTimeString(sunsettime)\n      return sunsetTimestr;\n    },\n    windDeg() {\n      let cardinalPoints = null\n      if(0 <= this.wind.deg < 11.25 || 348.75 <= this.wind.deg < 360) { cardinalPoints = '북' }\n      else if(11.25 <= this.wind.deg < 78.75)  { cardinalPoints = '북동' }\n      else if(78.75 <= this.wind.deg < 123.75)  { cardinalPoints = '동' }\n      else if(123.75 <= this.wind.deg < 146.25)  { cardinalPoints = '남동' }\n      else if(146.25 <= this.wind.deg < 191.25)  { cardinalPoints = '남' }\n      else if(191.25 <= this.wind.deg < 236.25)  { cardinalPoints = '남서' }\n      else if(236.25 <= this.wind.deg < 281.25)  { cardinalPoints = '서' }\n      else if(281.25 <= this.wind.deg < 348.75)  { cardinalPoints = '북서' }\n\n      return cardinalPoints\n    }\n  },\n  created() {  \n    // 페이지에 새롭게 접속할 경우, 이전에 입력해놓았던 나라가 보이도록 로컬스토리지에서 나라이름 가져옴.\n    const localstorageCityName = localStorage.getItem('city_name');  \n    this.newCity(localstorageCityName)\n\n\n    // SearchCity.vue에서 input에 입력한 나라이름 가져와서 새롭게 나라날씨 데이터 가져옴.\n    // eventbus.$on('sendCityName', (cityInput, signal) => {\n    eventbus.$on('sendCityName', (cityInput) => {\n      console.log(cityInput)\n      // console.log(signal);     \n\n      // 나라 이름이 맞을 경우 날씨데이터 보여주고, 이름 틀릴경우 알림창 뜨도록하기.(아직 미완성) \n      // if(signal === true) {\n        this.newCity(cityInput)\n      // }    \n      \n    }) \n    \n\n    \n        \n  },\n  methods: {\n    // api주소에 입력한 도시이름 넣어줌.(api의 index.js)\n    newCity(cityname) {\n      console.log('city name 받았어!!!!!!!!!');\n      this.$store.dispatch('FETCH_WEATHER', cityname)     \n    },\n  }\n}\n\n\n    //1. input이 입력되면 eventBus로 보낸 city명을 받아온뒤\n    //2. city명을 데이터에 저장해주고,\n    //3. 이 과정을 거친 후에 store로 시티명을 보내줘야함.\n    // 온도, 날씨정보, 도시명, 날짜 출력.\n</script>\n\n<style>\n.city{ outline:3px solid orange; margin-top:30px; padding:40px; }\nspan{ font-size:25px; font-weight:bold; }\n</style>\n"]}]}