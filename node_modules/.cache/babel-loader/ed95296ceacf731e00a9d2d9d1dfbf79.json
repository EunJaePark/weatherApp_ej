{"remainingRequest":"/Users/eunjae/Desktop/github/weatherApp_ej/node_modules/babel-loader/lib/index.js!/Users/eunjae/Desktop/github/weatherApp_ej/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/eunjae/Desktop/github/weatherApp_ej/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/eunjae/Desktop/github/weatherApp_ej/src/views/City.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/eunjae/Desktop/github/weatherApp_ej/src/views/City.vue","mtime":1588259023868},{"path":"/Users/eunjae/Desktop/github/weatherApp_ej/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/eunjae/Desktop/github/weatherApp_ej/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/eunjae/Desktop/github/weatherApp_ej/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/eunjae/Desktop/github/weatherApp_ej/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KaW1wb3J0IHsgZXZlbnRidXMgfSBmcm9tICcuLi9tYWluJzsKZXhwb3J0IGRlZmF1bHQgewogIGRhdGE6IGZ1bmN0aW9uIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICBjaXR5bmFtZTogJycsCiAgICAgIC8vIHNpZ25hbDogZmFsc2UsCiAgICAgIG1pbnVzOiAyNzMuMTUgLy8ganNvbuuNsOydtO2EsOyXkOyEnCB0ZW1w64qUIEtlbHZpbijsoIjrjIDsmKjrj4Qp7J2066+A66GcIDI3My4xNeulvCDrubzso7zslrTslbztlZzri6QuIC8vIOy8iOu5iOydgCDsoIjrjIDsmKjrj4QoMOydhCDquLDsoITsnLzroZwg7ZWoKeyXkCDquLDrsJjsnLzroZwg7ZWY7JesIOy4oeygleuQmOuKlCDsmKjrj4TsnbTrqbAsICdLJyDsi6zrs7zsnbQg7IKs7Jqp65Cp64uI64ukLiAwSyDsnYAgLTI3My4xNSDCsEMsIO2YueydgCAtNDU5LjY3IMKwRiDroZwg67OA7ZmY65CgIOyImCDsnojsirXri4jri6QuCgogICAgfTsKICB9LAogIGNvbXB1dGVkOiB7CiAgICAvLyDqsIEg642w7J207YSwIOyEoOyWuC4KICAgIGNpdHk6IGZ1bmN0aW9uIGNpdHkoKSB7CiAgICAgIHJldHVybiB0aGlzLiRzdG9yZS5zdGF0ZS53ZWF0aGVyRGF0YTsKICAgIH0sCiAgICB0ZW1wSW5mbzogZnVuY3Rpb24gdGVtcEluZm8oKSB7CiAgICAgIHJldHVybiB0aGlzLiRzdG9yZS5zdGF0ZS53ZWF0aGVyRGF0YS5tYWluOwogICAgfSwKICAgIHdlYXRoZXI6IGZ1bmN0aW9uIHdlYXRoZXIoKSB7CiAgICAgIHJldHVybiB0aGlzLiRzdG9yZS5zdGF0ZS53ZWF0aGVyRGF0YS53ZWF0aGVyOwogICAgfSwKICAgIHN1bjogZnVuY3Rpb24gc3VuKCkgewogICAgICByZXR1cm4gdGhpcy4kc3RvcmUuc3RhdGUud2VhdGhlckRhdGEuc3lzOwogICAgfSwKICAgIHdpbmQ6IGZ1bmN0aW9uIHdpbmQoKSB7CiAgICAgIHJldHVybiB0aGlzLiRzdG9yZS5zdGF0ZS53ZWF0aGVyRGF0YS53aW5kOwogICAgfSwKICAgIC8vIOq4sOyYqDog7ISt7JSo66GcIOyImOyglSArIOyGjOyImOygkCDrsJjsmKzrprwuCiAgICB0ZW1wOiBmdW5jdGlvbiB0ZW1wKCkgewogICAgICByZXR1cm4gTWF0aC5yb3VuZCh0aGlzLnRlbXBJbmZvLnRlbXAgLSB0aGlzLm1pbnVzKTsgLy8g7IaM7IiY7KCQIOuwmOyYrOumvC4KICAgIH0sCiAgICBtYXhUZW1wOiBmdW5jdGlvbiBtYXhUZW1wKCkgewogICAgICByZXR1cm4gTWF0aC5yb3VuZCh0aGlzLnRlbXBJbmZvLnRlbXBfbWF4IC0gdGhpcy5taW51cyk7CiAgICB9LAogICAgbWluVGVtcDogZnVuY3Rpb24gbWluVGVtcCgpIHsKICAgICAgcmV0dXJuIE1hdGgucm91bmQodGhpcy50ZW1wSW5mby50ZW1wX21pbiAtIHRoaXMubWludXMpOwogICAgfSwKICAgIC8v7J287LacLOydvOuqsOyLnOqwhDog7Jyg64uJ7IqkIOyLnOqwhOydhCDtkZzspIDsi5zqsITsnLzroZwg67OA6rK9LgogICAgc3VucmlzZVRpbWU6IGZ1bmN0aW9uIHN1bnJpc2VUaW1lKCkgewogICAgICAvLyB1bml47Iuc6rCEIOuzgO2ZmC4KICAgICAgdmFyIHN1bnJpc2UgPSB0aGlzLnN1bi5zdW5yaXNlOwogICAgICBjb25zb2xlLmxvZyhzdW5yaXNlKTsKICAgICAgdmFyIHN1bnJpc2V0aW1lID0gbmV3IERhdGUoc3VucmlzZSAqIDEwMDApOwogICAgICB2YXIgc3VucmlzZVRpbWVzdHIgPSBzdW5yaXNldGltZS50b0xvY2FsZVRpbWVTdHJpbmcoc3VucmlzZXRpbWUpOwogICAgICByZXR1cm4gc3VucmlzZVRpbWVzdHI7CiAgICB9LAogICAgc3Vuc2V0VGltZTogZnVuY3Rpb24gc3Vuc2V0VGltZSgpIHsKICAgICAgLy8gdW5peOyLnOqwhCDrs4DtmZguCiAgICAgIHZhciBzdW5zZXQgPSB0aGlzLnN1bi5zdW5zZXQ7CiAgICAgIGNvbnNvbGUubG9nKHN1bnNldCk7CiAgICAgIHZhciBzdW5zZXR0aW1lID0gbmV3IERhdGUoc3Vuc2V0ICogMTAwMCk7CiAgICAgIHZhciBzdW5zZXRUaW1lc3RyID0gc3Vuc2V0dGltZS50b0xvY2FsZVRpbWVTdHJpbmcoc3Vuc2V0dGltZSk7CiAgICAgIHJldHVybiBzdW5zZXRUaW1lc3RyOwogICAgfSwKICAgIC8vIO2Sje2WpTog67Cp7JyEIOqwgeuPhOulvCDtlZzquIDroZwg7IiY7KCVLgogICAgd2luZERlZzogZnVuY3Rpb24gd2luZERlZygpIHsKICAgICAgdmFyIGNhcmRpbmFsUG9pbnRzID0gbnVsbDsKCiAgICAgIGlmICgwIDw9IHRoaXMud2luZC5kZWcgPCAxMS4yNSB8fCAzNDguNzUgPD0gdGhpcy53aW5kLmRlZyA8IDM2MCkgewogICAgICAgIGNhcmRpbmFsUG9pbnRzID0gJ+u2gSc7CiAgICAgIH0gZWxzZSBpZiAoMTEuMjUgPD0gdGhpcy53aW5kLmRlZyA8IDc4Ljc1KSB7CiAgICAgICAgY2FyZGluYWxQb2ludHMgPSAn67aB64+ZJzsKICAgICAgfSBlbHNlIGlmICg3OC43NSA8PSB0aGlzLndpbmQuZGVnIDwgMTIzLjc1KSB7CiAgICAgICAgY2FyZGluYWxQb2ludHMgPSAn64+ZJzsKICAgICAgfSBlbHNlIGlmICgxMjMuNzUgPD0gdGhpcy53aW5kLmRlZyA8IDE0Ni4yNSkgewogICAgICAgIGNhcmRpbmFsUG9pbnRzID0gJ+uCqOuPmSc7CiAgICAgIH0gZWxzZSBpZiAoMTQ2LjI1IDw9IHRoaXMud2luZC5kZWcgPCAxOTEuMjUpIHsKICAgICAgICBjYXJkaW5hbFBvaW50cyA9ICfrgqgnOwogICAgICB9IGVsc2UgaWYgKDE5MS4yNSA8PSB0aGlzLndpbmQuZGVnIDwgMjM2LjI1KSB7CiAgICAgICAgY2FyZGluYWxQb2ludHMgPSAn64Ko7IScJzsKICAgICAgfSBlbHNlIGlmICgyMzYuMjUgPD0gdGhpcy53aW5kLmRlZyA8IDI4MS4yNSkgewogICAgICAgIGNhcmRpbmFsUG9pbnRzID0gJ+yEnCc7CiAgICAgIH0gZWxzZSBpZiAoMjgxLjI1IDw9IHRoaXMud2luZC5kZWcgPCAzNDguNzUpIHsKICAgICAgICBjYXJkaW5hbFBvaW50cyA9ICfrtoHshJwnOwogICAgICB9CgogICAgICByZXR1cm4gY2FyZGluYWxQb2ludHM7CiAgICB9CiAgfSwKICBjcmVhdGVkOiBmdW5jdGlvbiBjcmVhdGVkKCkgewogICAgdmFyIF90aGlzID0gdGhpczsKCiAgICAvLyDtjpjsnbTsp4Dsl5Ag7IOI66Gt6rKMIOygkeyGje2VoCDqsr3smrAsIOydtOyghOyXkCDsnoXroKXtlbTrhpPslZjrjZgg64KY65286rCAIOuztOydtOuPhOuhnSDroZzsu6zsiqTthqDrpqzsp4Dsl5DshJwg64KY65287J2066aEIOqwgOyguOyYtC4KICAgIHZhciBsb2NhbHN0b3JhZ2VDaXR5TmFtZSA9IGxvY2FsU3RvcmFnZS5nZXRJdGVtKCdjaXR5X25hbWUnKTsKICAgIHRoaXMubmV3Q2l0eShsb2NhbHN0b3JhZ2VDaXR5TmFtZSk7IC8vIFNlYXJjaENpdHkudnVl7JeQ7IScIGlucHV07JeQIOyeheugpe2VnCDrgpjrnbzsnbTrpoQg6rCA7KC47JmA7IScIOyDiOuhreqyjCDrgpjrnbzrgqDslKgg642w7J207YSwIOqwgOyguOyYtC4KICAgIC8vIGV2ZW50YnVzLiRvbignc2VuZENpdHlOYW1lJywgKGNpdHlJbnB1dCwgc2lnbmFsKSA9PiB7CgogICAgZXZlbnRidXMuJG9uKCdzZW5kQ2l0eU5hbWUnLCBmdW5jdGlvbiAoY2l0eUlucHV0KSB7CiAgICAgIGNvbnNvbGUubG9nKGNpdHlJbnB1dCk7IC8vIGNvbnNvbGUubG9nKHNpZ25hbCk7ICAgICAKICAgICAgLy8g64KY6528IOydtOumhOydtCDrp57snYQg6rK97JqwIOuCoOyUqOuNsOydtO2EsCDrs7Tsl6zso7zqs6AsIOydtOumhCDti4DrprTqsr3smrAg7JWM66a87LC9IOucqOuPhOuhne2VmOq4sC4o7JWE7KeBIOuvuOyZhOyEsSkgCiAgICAgIC8vIGlmKHNpZ25hbCA9PT0gdHJ1ZSkgewoKICAgICAgX3RoaXMubmV3Q2l0eShjaXR5SW5wdXQpOyAvLyB9ICAgIAoKICAgIH0pOwogIH0sCiAgbWV0aG9kczogewogICAgLy8gYXBp7KO87IaM7JeQIOyeheugpe2VnCDrj4Tsi5zsnbTrpoQg64Sj7Ja07KSMLihhcGnsnZggaW5kZXguanMpCiAgICBuZXdDaXR5OiBmdW5jdGlvbiBuZXdDaXR5KGNpdHluYW1lKSB7CiAgICAgIGNvbnNvbGUubG9nKCdjaXR5IG5hbWUg67Cb7JWY7Ja0ISEhISEhISEhJyk7CiAgICAgIHRoaXMuJHN0b3JlLmRpc3BhdGNoKCdGRVRDSF9XRUFUSEVSJywgY2l0eW5hbWUpOwogICAgfQogIH0KfTsgLy8xLiBpbnB1dOydtCDsnoXroKXrkJjrqbQgZXZlbnRCdXProZwg67O064K4IGNpdHnrqoXsnYQg67Cb7JWE7Jio65KkCi8vMi4gY2l0eeuqheydhCDrjbDsnbTthLDsl5Ag7KCA7J6l7ZW07KO86rOgLAovLzMuIOydtCDqs7zsoJXsnYQg6rGw7LmcIO2bhOyXkCBzdG9yZeuhnCDsi5zti7DrqoXsnYQg67O064K07KSY7JW87ZWoLgovLyDsmKjrj4QsIOuCoOyUqOygleuztCwg64+E7Iuc66qFLCDrgqDsp5wg7Lac66ClLg=="},{"version":3,"sources":["City.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div \n    class=\"city clear\"\n    \n  ><!-- @cityname = \"newCity\" -->\n    <div class=\"mainWeather\">\n      <h1 class=\"cityname\">{{ city.name }}</h1>\n      <span class=\"date\">Sunday 30 April</span>\n\n      <div v-if=\"weather\" class=\"clear\">\n        <div class=\"iconBox\">\n          <img v-bind:src=\"`http://openweathermap.org/img/wn/${weather[0].icon}@2x.png`\" />\n        </div>\n        <div class=\"textBox\">\n          <span class=\"temp\">{{ temp }}℃</span> <!--평균기온-->\n          <span v-for=\"item in weather\" class=\"weatherText\">{{ item.main }}.  </span> <!--날씨-->\n        </div>\n      </div>\n    </div><!--.mainWeather-->\n\n    <div class=\"weatherInfo\">\n      <div v-if=\"tempInfo\">\n        <span>{{ maxTemp }}℃<span>Heigh</span></span> <!--최고 기온-->\n        <span>{{ minTemp  }}℃<span>Low</span></span>  <!--최저 기온-->    \n        <span>{{ tempInfo.humidity }}%<span>Humidity</span></span> <!--습도-->     \n      </div>\n\n      <div v-if=\"wind\">\n        <span>{{ windDeg }}풍({{ wind.deg }}) {{ wind.speed }}m/s<span>Wind</span></span> <!--바람-->\n      </div>\n\n      <div v-if=\"sun\">\n        <span>{{ sunriseTime }}<span>Sunrise</span></span> <!--일출-->\n        <span>{{ sunsetTime }}<span>Sunset</span></span> <!--일몰-->\n      </div>\n    </div><!--.weatherInfo-->\n\n    \n    <!-- <div style=\"outline:2px solid gray;  padding:20px;\">\n      <p>날씨 전체 데이터</p>\n      {{ city }}\n    </div> -->\n  </div><!--.city-->\n</template>\n\n<script>\nimport { eventbus } from '../main'\nexport default {\n  data() {\n    return {\n      cityname: '',\n      // signal: false,\n      minus: 273.15  // json데이터에서 temp는 Kelvin(절대온도)이므로 273.15를 빼주어야한다. // 켈빈은 절대온도(0을 기전으로 함)에 기반으로 하여 측정되는 온도이며, 'K' 심볼이 사용됩니다. 0K 은 -273.15 °C, 혹은 -459.67 °F 로 변환될 수 있습니다.\n    }\n  },\n  computed: {\n    // 각 데이터 선언.\n    city () {\n      return this.$store.state.weatherData\n    },\n    tempInfo() {\n      return this.$store.state.weatherData.main\n    },\n    weather() {\n      return this.$store.state.weatherData.weather\n    },\n    sun() {\n      return this.$store.state.weatherData.sys\n    },\n    wind() {\n      return this.$store.state.weatherData.wind\n    },\n\n    // 기온: 섭씨로 수정 + 소수점 반올림.\n    temp() {\n      return Math.round(this.tempInfo.temp - this.minus)  // 소수점 반올림.\n    },\n    maxTemp() {\n      return Math.round(this.tempInfo.temp_max - this.minus)\n    },\n    minTemp() {\n      return Math.round(this.tempInfo.temp_min - this.minus)\n    },\n\n    //일출,일몰시간: 유닉스 시간을 표준시간으로 변경.\n    sunriseTime() {\n      // unix시간 변환.\n      const sunrise = this.sun.sunrise\n      console.log(sunrise);\n      const sunrisetime = new Date(sunrise * 1000)\n      const sunriseTimestr = sunrisetime.toLocaleTimeString(sunrisetime)\n      return sunriseTimestr;\n    },\n    sunsetTime() {\n      // unix시간 변환.\n      const sunset = this.sun.sunset\n      console.log(sunset);\n      const sunsettime = new Date(sunset * 1000)\n      const sunsetTimestr = sunsettime.toLocaleTimeString(sunsettime)\n      return sunsetTimestr;\n    },\n\n    // 풍향: 방위 각도를 한글로 수정.\n    windDeg() {\n      let cardinalPoints = null\n      if(0 <= this.wind.deg < 11.25 || 348.75 <= this.wind.deg < 360) { cardinalPoints = '북' }\n      else if(11.25 <= this.wind.deg < 78.75)  { cardinalPoints = '북동' }\n      else if(78.75 <= this.wind.deg < 123.75)  { cardinalPoints = '동' }\n      else if(123.75 <= this.wind.deg < 146.25)  { cardinalPoints = '남동' }\n      else if(146.25 <= this.wind.deg < 191.25)  { cardinalPoints = '남' }\n      else if(191.25 <= this.wind.deg < 236.25)  { cardinalPoints = '남서' }\n      else if(236.25 <= this.wind.deg < 281.25)  { cardinalPoints = '서' }\n      else if(281.25 <= this.wind.deg < 348.75)  { cardinalPoints = '북서' }\n\n      return cardinalPoints\n    }\n  },\n  created() {  \n    // 페이지에 새롭게 접속할 경우, 이전에 입력해놓았던 나라가 보이도록 로컬스토리지에서 나라이름 가져옴.\n    const localstorageCityName = localStorage.getItem('city_name');  \n    this.newCity(localstorageCityName)\n\n\n    // SearchCity.vue에서 input에 입력한 나라이름 가져와서 새롭게 나라날씨 데이터 가져옴.\n    // eventbus.$on('sendCityName', (cityInput, signal) => {\n    eventbus.$on('sendCityName', (cityInput) => {\n      console.log(cityInput)\n      // console.log(signal);     \n\n      // 나라 이름이 맞을 경우 날씨데이터 보여주고, 이름 틀릴경우 알림창 뜨도록하기.(아직 미완성) \n      // if(signal === true) {\n        this.newCity(cityInput)\n      // }    \n      \n    }) \n    \n\n    \n        \n  },\n  methods: {\n    // api주소에 입력한 도시이름 넣어줌.(api의 index.js)\n    newCity(cityname) {\n      console.log('city name 받았어!!!!!!!!!');\n      this.$store.dispatch('FETCH_WEATHER', cityname)     \n    },\n  }\n}\n\n\n    //1. input이 입력되면 eventBus로 보낸 city명을 받아온뒤\n    //2. city명을 데이터에 저장해주고,\n    //3. 이 과정을 거친 후에 store로 시티명을 보내줘야함.\n    // 온도, 날씨정보, 도시명, 날짜 출력.\n</script>\n\n<style>\n.clear:after{ content:''; display:block; clear:both; }\n.city{ outline:px solid orange; margin-top:30px; padding:40px 100px; }\n\n.mainWeather{ outline:px solid red; width:50%; float:left; }\n.mainWeather > .cityname{ outline:px solid red; font-size:45px; font-weight:bold; }\n.mainWeather > .date{ margin:10px 0 50px; font-size:20px; display:block; }\n.mainWeather > div{  height:200px; }\n.mainWeather > div > .iconBox{ outline:px solid lime; width:50%; padding-top:10px; float:left; }\n.mainWeather > div > .iconBox > img{ outline:px solid lime; width:180px; margin:0 0 0 auto; display:block; }\n.mainWeather > div > .textBox{ outline:px solid blue; width:50%; height:100%; padding:40px 0; float:left; }\n.mainWeather > div > .textBox > .temp{ outline:px solid blue; font-size:70px;  }\n.mainWeather > div > .textBox > .weatherText{ outline:px solid blueviolet; margin-left:10px; font-size:20px; display:block;  }\n\n.weatherInfo{ border-radius:10px;  width:calc(50% + -20px);  margin:100px 0 0 20px; background-color:rgba(255, 255, 255, .2); float:left; }\n.weatherInfo span{ width:33.3%; height:100px; padding:26px 0; font-size:20px; text-align:center; float:left; position:relative; } /* 날씨정보 */\n.weatherInfo span > span{  width:100%; height:auto; padding:0; font-size:15px; position:absolute; bottom:26px; left:0; }  /* 날씨정보 타이틀 */\n\n@media screen and (max-width: 900px) {\n  .city{ padding:40px; }\n  .mainWeather{ width:100%; }\n  .weatherInfo{ width:100%; margin:50px 0; }\n}\n\n@media screen and (max-width: 550px) {\n  .mainWeather > div > .iconBox > img{ width:130px; }\n  .mainWeather > div > .textBox > .temp{ font-size:50px; }\n  .weatherInfo{ width:100%; margin:30px 0; }\n}\n</style>\n"],"sourceRoot":"src/views"}]}