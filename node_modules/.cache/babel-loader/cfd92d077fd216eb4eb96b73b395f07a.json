{"remainingRequest":"/Users/eunjae/Desktop/github/weatherApp_ej/node_modules/babel-loader/lib/index.js!/Users/eunjae/Desktop/github/weatherApp_ej/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/eunjae/Desktop/github/weatherApp_ej/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/eunjae/Desktop/github/weatherApp_ej/src/components/SearchCity.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/eunjae/Desktop/github/weatherApp_ej/src/components/SearchCity.vue","mtime":1601047245107},{"path":"/Users/eunjae/Desktop/github/weatherApp_ej/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/eunjae/Desktop/github/weatherApp_ej/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/eunjae/Desktop/github/weatherApp_ej/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/eunjae/Desktop/github/weatherApp_ej/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KaW1wb3J0IHsgZXZlbnRidXMgfSBmcm9tICcuLi9tYWluJzsKZXhwb3J0IGRlZmF1bHQgewogIGRhdGE6IGZ1bmN0aW9uIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICBjaXR5SW5wdXQ6ICcnLAogICAgICBsb2NhdGlvbjogewogICAgICAgIGxhdDogJycsCiAgICAgICAgbG9uOiAnJwogICAgICB9CiAgICB9OwogIH0sCiAgY3JlYXRlZDogZnVuY3Rpb24gY3JlYXRlZCgpIHsKICAgIGNvbnNvbGUubG9nKGxvY2FsU3RvcmFnZS5nZXRJdGVtKCdjaXR5X25hbWUnKSk7IC8vIOqygOyDie2VnCDrj4Tsi5zqsIAg7JeG7J2EIOqyveyasCAnc2VvdWwn64Kg7JSo6rCAIOucqOuPhOuhnSDtlaguCgogICAgaWYgKGxvY2FsU3RvcmFnZS5nZXRJdGVtKCdjaXR5X25hbWUnKSA9PT0gJycpIHsKICAgICAgbG9jYWxTdG9yYWdlLnNldEl0ZW0oJ2NpdHlfbmFtZScsICdzZW91bCcpOwogICAgfSAvLyB0aGlzLmNpdHlMb2NhdGlvbigpOwoKICB9LAogIG1ldGhvZHM6IHsKICAgIGNpdHlOYW1lOiBmdW5jdGlvbiBjaXR5TmFtZSgpIHsKICAgICAgLy8gY29uc29sZS5sb2coY2l0eSk7CiAgICAgIGNvbnNvbGUubG9nKCJcdUM3ODVcdUI4MjVcdUQ1NUMgXHVDNzc0XHVCOTg0OiAiLmNvbmNhdCh0aGlzLmNpdHlJbnB1dCkpOyAvLyBDaXR5LnZ1ZeuhnCDrs7TrgrTripQg7J2067Kk7Yq467KE7Iqk7ZWo7IiY7J24IGlucHV0TmFtZSgpKG1haW4uanPsl5Ag7J6R7ISx7ZW064aT7J2A7ZWo7IiYLinsnLzroZwg7KCE7Iah7ZWgIOuNsOydtO2EsOuTpCDrhKPslrTspIwuCiAgICAgIC8vIHRydWXripQgQ2l0eS52dWXsl5DshJwg7IKs7Jqp7ZWgIHNpZ25hbC4o7KeA6riIIOy9lOuTnOyXkOyEnOuKlCDsl4bslrTrj4Qg65CoLikKCiAgICAgIGV2ZW50YnVzLmlucHV0TmFtZSh0aGlzLmNpdHlJbnB1dCk7IC8vIGV2ZW50YnVzLmlucHV0TmFtZSh0aGlzLmNpdHlJbnB1dCwgdHJ1ZSkKICAgICAgLy8gbG9jYWwgc3RvcmFnZeyXkCDsnoXroKXtlZwg64+E7Iuc7J2066aEIOyggOyepe2VmOuKlCDtlajsiJgg7Iuk7ZaJLgoKICAgICAgdGhpcy5zYXZlTmFtZSh0aGlzLmNpdHlJbnB1dCk7IC8vIGlucHV07J6F66Cl7LC9IOuLpOyLnCDruYTsm4zspIwuCgogICAgICB0aGlzLmNpdHlJbnB1dCA9IG51bGw7CiAgICB9LAogICAgc2F2ZU5hbWU6IGZ1bmN0aW9uIHNhdmVOYW1lKGNpdHkpIHsKICAgICAgY29uc29sZS5sb2codGhpcyk7CiAgICAgIGNvbnNvbGUubG9nKGNpdHkpOwogICAgICBjb25zb2xlLmxvZygnc2F2ZU5hbWXqsIAg7Iuk7ZaJ65CoISEhIScpOyAvLyBsb2NhbCBzdG9yYWdl7JeQIOyeheugpe2VnCDrj4Tsi5zsnbTrpoQg7KCA7J6lLgoKICAgICAgY29uc29sZS5sb2coIlx1Qjg1Q1x1Q0VFQ1x1QzVEMFx1QzgwMFx1QzdBNVx1RDU2MCBcdUIwOThcdUI3N0NcdUM3NzRcdUI5ODQ6ICIuY29uY2F0KGNpdHkpKTsKICAgICAgbG9jYWxTdG9yYWdlLnNldEl0ZW0oJ2NpdHlfbmFtZScsIHRoaXMuY2l0eUlucHV0KTsKICAgIH0gLy8gY2l0eUxvY2F0aW9uKCkgewogICAgLy8gICBpZihuYXZpZ2F0b3IuZ2VvbG9jYXRpb24pIHsKICAgIC8vICAgICBuYXZpZ2F0b3IuZ2VvbG9jYXRpb24uZ2V0Q3VycmVudFBvc2l0aW9uKGZ1bmN0aW9uKHBvc2l0aW9uKSB7CiAgICAvLyAgICAgICBsZXQgcG9zID0gewogICAgLy8gICAgICAgICBsYXQ6IHBvc2l0aW9uLmNvb3Jkcy5sYXRpdHVkZSwKICAgIC8vICAgICAgICAgbG9uOiBwb3NpdGlvbi5jb29yZHMubG9uZ2l0dWRlCiAgICAvLyAgICAgICB9OwogICAgLy8gICAgICAgYWxlcnQoYO2YhOyerCDsnITsuZjripQgJHtwb3MubGF0fSwgJHtwb3MubG9ufWApOwogICAgLy8gICAgIH0pOwogICAgLy8gICB9CiAgICAvLyB9LAoKICB9Cn07"},{"version":3,"sources":["SearchCity.vue"],"names":[],"mappings":";;;;;;;;;;;;;;AAeA,SAAA,QAAA,QAAA,SAAA;AACA,eAAA;AACA,EAAA,IADA,kBACA;AACA,WAAA;AACA,MAAA,SAAA,EAAA,EADA;AAEA,MAAA,QAAA,EAAA;AACA,QAAA,GAAA,EAAA,EADA;AAEA,QAAA,GAAA,EAAA;AAFA;AAFA,KAAA;AAOA,GATA;AAUA,EAAA,OAVA,qBAUA;AACA,IAAA,OAAA,CAAA,GAAA,CAAA,YAAA,CAAA,OAAA,CAAA,WAAA,CAAA,EADA,CAEA;;AACA,QAAA,YAAA,CAAA,OAAA,CAAA,WAAA,MAAA,EAAA,EAAA;AACA,MAAA,YAAA,CAAA,OAAA,CAAA,WAAA,EAAA,OAAA;AACA,KALA,CAOA;;AACA,GAlBA;AAmBA,EAAA,OAAA,EAAA;AACA,IAAA,QADA,sBACA;AACA;AAEA,MAAA,OAAA,CAAA,GAAA,4CAAA,KAAA,SAAA,GAHA,CAKA;AACA;;AACA,MAAA,QAAA,CAAA,SAAA,CAAA,KAAA,SAAA,EAPA,CAQA;AAEA;;AACA,WAAA,QAAA,CAAA,KAAA,SAAA,EAXA,CAaA;;AACA,WAAA,SAAA,GAAA,IAAA;AACA,KAhBA;AAiBA,IAAA,QAjBA,oBAiBA,IAjBA,EAiBA;AACA,MAAA,OAAA,CAAA,GAAA,CAAA,IAAA;AACA,MAAA,OAAA,CAAA,GAAA,CAAA,IAAA;AAEA,MAAA,OAAA,CAAA,GAAA,CAAA,mBAAA,EAJA,CAMA;;AACA,MAAA,OAAA,CAAA,GAAA,0EAAA,IAAA;AAEA,MAAA,YAAA,CAAA,OAAA,CAAA,WAAA,EAAA,KAAA,SAAA;AACA,KA3BA,CA6BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;AAxCA;AAnBA,CAAA","sourcesContent":["<template>\n  <div class=\"inputBox\">\n    <form @submit.prevent=\"cityName\">\n      <input\n        type=\"text\"\n        placeholder=\"'영어'로 지역명을 입력해 주세요.\"\n        v-model=\"cityInput\"       \n      >\n      <i class=\"fas fa-search\"></i>\n      <!-- </input> -->\n    </form>    \n  </div>\n</template>\n\n<script>\nimport { eventbus } from '../main'\nexport default {\n  data() {\n    return {\n      cityInput: '',\n      location: {\n        lat: '',\n        lon: '',\n      },\n    }\n  },\n  created() {\n    console.log(localStorage.getItem('city_name'));\n    // 검색한 도시가 없을 경우 'seoul'날씨가 뜨도록 함.\n    if(localStorage.getItem('city_name') === '') {\n      localStorage.setItem('city_name', 'seoul');\n    }\n\n    // this.cityLocation();\n  },\n  methods: {\n    cityName() {\n      // console.log(city);\n      \n      console.log(`입력한 이름: ${this.cityInput}`)\n\n      // City.vue로 보내는 이벤트버스함수인 inputName()(main.js에 작성해놓은함수.)으로 전송할 데이터들 넣어줌.\n      // true는 City.vue에서 사용할 signal.(지금 코드에서는 없어도 됨.)\n      eventbus.inputName(this.cityInput) \n      // eventbus.inputName(this.cityInput, true)\n\n      // local storage에 입력한 도시이름 저장하는 함수 실행.\n      this.saveName(this.cityInput)\n\n      // input입력창 다시 비워줌.\n      this.cityInput = null\n    },\n    saveName(city) {\n      console.log(this);\n      console.log(city);\n      \n      console.log('saveName가 실행됨!!!!');\n      \n      // local storage에 입력한 도시이름 저장.\n      console.log(`로컬에저장할 나라이름: ${city}`);\n      \n      localStorage.setItem('city_name', this.cityInput);\n    },\n\n    // cityLocation() {\n    //   if(navigator.geolocation) {\n    //     navigator.geolocation.getCurrentPosition(function(position) {\n    //       let pos = {\n    //         lat: position.coords.latitude,\n    //         lon: position.coords.longitude\n    //       };\n    //       alert(`현재 위치는 ${pos.lat}, ${pos.lon}`);\n    //     });\n    //   }\n      \n    // },\n  }\n\n}\n</script>\n\n<style scoped>\n.inputBox{ outline:0px solid red; position:absolute; top:150px; left:50%; transform:translateX(-50%); z-index:1000; }\nform{ width:500px; margin:0 auto; position:relative; }\nform > input{ border:none; border-radius:20px; width:100%; line-height:40px;  padding:0 40px 0 55px; font-size:18px; color:#575656; box-shadow:3px 3px 5px rgba(0, 0, 0, .1); }\nform > input:focus{ outline:none; }\nform > i{ font-size:20px; color:rgba(0, 0, 0, .5); position:absolute; left:20px; top:50%; transform:translateY(-50%);  }\n\n@media screen and (max-width: 900px) {\n  .inputBox{ top:100px; }\n  form{ width:400px; }\n}\n\n@media screen and (max-width: 500px) {\n  .inputBox{ width:90%; }\n  form{ width:350px; }\n}\n</style>"],"sourceRoot":"src/components"}]}